import { Button, NonIdealState } from '@blueprintjs/core'
import useQueryDocuments, { QueryDocumentRequest } from '@hooks/document/useQueryDocuments'
import Head from 'next/head'
import type { ITag } from 'types'
import type { NextPage } from 'next'
import QueryBuilder from '@components/QueryBuilder'
import React from 'react'
import styles from '../styles/Home.module.css'



const Home: NextPage = () => {
  const [queryRequest, setQueryRequest] = React.useState<QueryDocumentRequest>({
    queries: [],
    tags: [],
  })

  const updateTable = () => {
    if (queryRequest.queries.length < 1)
      return
      
    refetch()
  }

  const { data, isLoading, isError, error, refetch } = useQueryDocuments(queryRequest)

const getTableData = () => {
    if (isLoading) {
      return <NonIdealState title="Loading..." />
    }

    if (isError) {
      return <NonIdealState title="Error" description={error.message} />
    }

    if (data?.length === 0) {
      return <NonIdealState title="No documents found" />
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <QueryBuilder
        queries={queryRequest.queries} 
        onChangeQuery={(queries) => setQueryRequest({ ...queryRequest, queries }) }
        tags={queryRequest.tags}
        onChangeTags={(tags) => setQueryRequest({ ...queryRequest, tags })}  
        maxTags={5}
        maxQueries={5}/>
        <Button 
        intent='primary'
        onClick={updateTable}>Update</Button>
     { getTableData() }
     
    </div>
  )
}

export default Home;
