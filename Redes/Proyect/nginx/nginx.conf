worker_processes 1;

events { worker_connections 1024; }

http {
  
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SharedNixCraftSSL:30m; 
    # ssl_session_tickets off;

    server_name localhost;

    # TLS 1.3 only
    # should not use tls 1.1 or 1.0 as they are insecure
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # tells browser to use https
    add_header Strict-Transport-Security "max-age=63072000" always;

    # server_name api.shhootout.tk;
    
    # to use locally use the self signed certificates in the ssl directory
    # for production use the appropiate keys
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
  
    access_log /var/log/nginx/data-access.log combined;

    location /api/ {
       proxy_pass http://api:8090;
       proxy_redirect off;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
       proxy_read_timeout 20d;
       proxy_buffering off;
    }

    location / {
       proxy_pass http://frontend:3000;
       proxy_redirect off;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
       proxy_read_timeout 20d;
       proxy_buffering off;
       }
  }
}